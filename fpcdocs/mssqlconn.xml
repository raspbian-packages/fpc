<?xml version="1.0" encoding="utf-8"?>
<fpdoc-descriptions>
  <package name="fcl">
    <!--
  ====================================================================
    mssqlconn
  ====================================================================
-->
    <module name="mssqlconn">
      <short>Microsoft SQL Server and Sybase ASE database connectors</short>
      <descr>Connector to Microsoft SQL Server databases. Needs FreeTDS dblib library.
</descr>
      <!--
  ********************************************************************
    #fcl-db.mssqlconn.TMSSQLConnection
  ********************************************************************
-->
      <!-- class Visibility: default -->
      <element name="TMSSQLConnection">
        <short>Microsoft SQL Server database connector</short>
        <descr>
          <p>Connector to Microsoft SQL Server databases.</p>
          <p>Requirements:</p>
          <p>MS SQL Server Client Library is required (ntwdblib.dll)</p>
          <p>- or -</p>
          <p>FreeTDS (dblib.dll)</p>
          <p>Older FreeTDS libraries may require freetds.conf: (http://www.freetds.org/userguide/freetdsconf.htm)</p>
          <p>[global]</p>
          <p>tds version = 7.1</p>
          <p>client charset = UTF-8</p>
          <p>port = 1433 or instance = ...  (optional)</p>
          <p>dump file = freetds.log        (optional)</p>
          <p>text size = 2147483647         (optional)</p>
          <p>Known problems:</p>
          <p>- CHAR/VARCHAR data truncated to column length when encoding to UTF-8 (use NCHAR/NVARCHAR instead or CAST char/varchar to nchar/nvarchar)</p>
          <p>- Multiple result sets (MARS) are not supported (for example when SP returns more than 1 result set only 1st is processed)</p>
          <p>- DB-Library error 10038 "Results Pending": set TSQLQuery.PacketRecords=-1 to fetch all pending rows</p>
          <p>- BLOB data (IMAGE/TEXT columns) larger than 16MB are truncated to 16MB: (set TMSSQLConnection.Params: 'TEXTSIZE=2147483647' or execute 'SET TEXTSIZE 2147483647')</p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMSSQLConnection.Password">
        <descr>
          <var>TMSSQLConnection</var> specific: if you don't enter a UserName and Password, the connector will try to use Trusted Authentication/SSPI (on Windows only).</descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMSSQLConnection.UserName">
        <descr>
          <var>TMSSQLConnection</var> specific: if you don't enter a UserName and Password, the connector will try to use Trusted Authentication/SSPI (on Windows only).</descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMSSQLConnection.CharSet">
        <descr>
          <p>Character Set - if you use Microsoft DB-Lib and set to 'UTF-8' then char/varchar fields will be UTF8Encoded/Decoded.</p>
          <p>If you use FreeTDS DB-Lib, then you must compile with iconv support (requires libiconv2.dll) or cast char/varchar to nchar/nvarchar in SELECTs.</p>
        </descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMSSQLConnection.HostName">
        <short>Host and optionally port or instance</short>
        <descr>
          <p>
            <var>TMSSQLConnection</var> specific: you can specify an instance or a port after the host name itself.</p>
          <p>Instance should be specified with a backslash e.g.: 127.0.0.0.1\SQLEXPRESS. Port should be specified with a colon, e.g. BIGBADSERVER:1433</p>
          <p>See <url href="http://www.freetds.org/userguide/portoverride.htm"/>
          </p>
        </descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMSSQLConnection.DatabaseName">
        <descr>
          <var>TMSSQLConnection</var> specific: the 
          <var>master</var> database should always exist on a server.</descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMSSQLConnection.Params">
        <descr>
          <p>
            <var>TMSSQLConnection</var> specific:</p>
          <p>set "AutoCommit=true" if you don't want to explicitly commit/rollback transactions</p>
          <p>set "TextSize=16777216 - to set maximum size of blob/text/image data returned. Otherwise, these large fields may be cut off when retrieving/setting data.</p>
        </descr>
      </element>
      <!--
  ********************************************************************
    #fcl-db.mssqlconn.TSybaseConnection
  ********************************************************************
-->
      <!-- class Visibility: default -->
      <element name="TSybaseConnection">
        <short>Sybase ASE database connector</short>
        <descr>
          <p>Connector to Sybase Adaptive Server Enterprise (ASE) database servers.</p>
          <p>Requirements:</p>
          <p>FreeTDS (dblib.dll)</p>
          <p>Older FreeTDS libraries may require freetds.conf: (http://www.freetds.org/userguide/freetdsconf.htm)</p>
          <p>[global]</p>
          <p>tds version = 7.1</p>
          <p>client charset = UTF-8</p>
          <p>port = 5000  (optional)</p>
          <p>dump file = freetds.log        (optional)</p>
          <p>text size = 2147483647         (optional)</p>
        </descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TSybaseConnection.HostName">
        <short>Host and optionally port</short>
        <descr>
          <p>
            <var>TSybaseConnection</var> specific: you can specify a port after the host name itself.</p>
          <p>Port should be specified with a colon, e.g. BIGBADSERVER:5000</p>
          <p>See <url href="http://www.freetds.org/userguide/portoverride.htm"/>
          </p>
        </descr>
      </element>
      <!--
  ********************************************************************
    #fcl-db.mssqlconn.EMSSQLDatabaseError
  ********************************************************************
-->
      <!-- class Visibility: default -->
      <element name="EMSSQLDatabaseError">
        <short>Sybase/MS SQL Server specific error</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: public -->
      <element name="EMSSQLDatabaseError.DBErrorCode">
        <short>Sybase/MS SQL Server error code</short>
        <descr>Error code as generated by the database server.
</descr>
        <seealso/>
      </element>

      <element name="DBLibLibraryName">
        <short>Library to load when activating support</short>
        <descr>
        <var>DBLibLibraryName</var> is the name of the library to load when dynamically loading support for MS SQL or Sybase. 
        It must be set before the first connection is made.
        </descr>
        <seealso/>
      </element>

      <element name="TMSSQLConnection.Connected">
        <short>Is the connection active</short>
        <descr>
        <var>Connected</var> can be set to <var>True</var> to activate the connection, or to <var>False</var> to close the connection.
        </descr>
        <seealso/>
      </element>

      <element name="TMSSQLConnection.Create">
        <short>Create a new instance of <var>TMSSQLConnection</var></short>
        <descr>
        <var>Create</var> is the default constructor for the <var>TMSSQLConnection</var> class. 
        It calls the inherited constructor and sets some defaults.
        </descr>
        <seealso/>
      </element>
      <element name="TMSSQLConnection.Create.AOwner">
        <short>Owner of the connection instance</short>
      </element>

      <element name="TMSSQLConnection.CreateDB">
        <short>Create a new MS SQL database</short>
        <descr>
        <var>CreateDB</var> creates a database on the server with given <var>DatabaseName</var>.
        </descr>
        <seealso>
        <link id="TMSSQLConnection.DropDB"/>
        </seealso>
      </element>

      <element name="TMSSQLConnection.DropDB">
        <short>Drop a MS SQL database</short>
        <descr>
        <var>DropDB</var> drops a database on the server with given <var>DatabaseName</var>
        </descr>
        <seealso>
        <link id="TMSSQLConnection.CreateDB"/>
        </seealso>
      </element>

      <element name="TMSSQLConnection.GetConnectionInfo">
        <short>Return some information about the connection</short>
        <descr><var>GetConnectionInfo</var> overrides 
        <link id="#fcl.sqldb.TSQLConnection.GetConnectionInfo">TSQLConnection.GetConnectionInfo</link>
        to return the relevant information for the Interbase/Firebird connection.
        </descr>
        <seealso>
        <link id="#fcl.sqldb.TSQLConnection.GetConnectionInfo">TSQLConnection.GetConnectionInfo</link>
        <link id="#fcl.sqldb.TConnInfoType">TConnInfoType</link>
        </seealso>>
      </element>
      <element name="TMSSQLConnection.GetConnectionInfo.Result">
        <short>>Requested information as a string value.</short>
      </element>
      <element name="TMSSQLConnection.GetConnectionInfo.InfoType">
        <short>The kind of connection information to be returned.</short>
      </element>

      <element name="TMSSQLConnection.KeepConnection">
        <short>Keep connection alive</short>
        <descr><var>KeepConnection</var> is redeclared from <link id="TSQLConnection.KeepConnection"/></descr>
        <seealso><link id="TSQLConnection.KeepConnection"/></seealso>
      </element>

      <element name="TMSSQLConnection.LoginPrompt">
        <short>Show login prompt</short>
        <descr><var>LoginPrompt</var> is redeclared from <link id="TSQLConnection.LoginPrompt"/></descr>
        <seealso><link id="TSQLConnection.LoginPrompt"/></seealso>
      </element>

      <element name="TMSSQLConnection.OnLogin">
        <short>Called when logging in</short>
        <descr><var>OnLogin</var> is redeclared from <link id="TSQLConnection.OnLogin"/></descr>
        <seealso><link id="TSQLConnection.OnLogin"/></seealso>
      </element>

      <element name="TMSSQLConnection.Role">
        <short>Role for user</short>
        <descr><var>Role</var> is redeclared from <link id="TSQLConnection.Role"/></descr>
        <seealso><link id="TSQLConnection.Role"/></seealso>
        <seealso/>
      </element>

      <element name="TMSSQLConnection.Transaction">
        <short>Default transaction</short>
        <descr><var>Transaction</var> is redeclared from <link id="TSQLConnection.Transaction"/></descr>
        <seealso><link id="TSQLConnection.Transaction"/></seealso>
      </element>

      <element name="TMSSQLConnectionDef">
        <short>Connection definition for <var>TSQLConnector</var></short>
        <descr>Describes the MS SQL connection properties for <link id="TSQLConnector"/></descr>
        <seealso>
        <link id="TMSSQLConnection"/>
        <link id="TSQLConnector"/>
        </seealso>
      </element>

      <element name="TMSSQLConnectionDef.ConnectionClass">
        <short>Connection class to use.</short>
        <descr>
        <var>ConnectionClass</var> returns <link id="TMSSQLConnection"/>
        </descr>
        <seealso>
        <link id="TMSSQLConnection"/>
        </seealso>
      </element>
      <element name="TMSSQLConnectionDef.ConnectionClass.Result">
        <short>TMSSQLConnection</short>
      </element>

      <element name="TMSSQLConnectionDef.DefaultLibraryName">
        <short>Default name of the MSSQL client library</short>
        <descr>
        <var>DefaultLibraryName</var> returns the library name to use when loading the MSSQL client library.
        </descr>
        <seealso/>
      </element>
      <element name="TMSSQLConnectionDef.DefaultLibraryName.Result">
        <short>The library name</short>
      </element>

      <element name="TMSSQLConnectionDef.Description">
        <short>Short description of connection</short>
        <descr>
        <var>Description</var> describes the MS SQL connector type.
        </descr>
        <seealso/>
      </element>
      <element name="TMSSQLConnectionDef.Description.Result">
        <short>A short description of the MS SQL type</short>
      </element>

      <element name="TMSSQLConnectionDef.LoadedLibraryName">
        <short>Actally loaded library name</short>
        <descr>
        <var>LoadedLibraryName</var> returns the actually loaded library name.
        </descr>
        <seealso>
        <link id="TMSSQLConnectionDef.DefaultLibraryName">DefaultLibraryName</link>
        </seealso>
      </element>
      <element name="TMSSQLConnectionDef.LoadedLibraryName.Result">
        <short>The actually loaded library</short>
      </element>

      <element name="TMSSQLConnectionDef.LoadFunction">
        <short>Return Function to call when loading MS-SQL support</short>
        <descr>
        <var>LoadFunction</var> is used by the connector logic to get the function to dynamically load MS-SQL support.
        </descr>
        <seealso/>
      </element>
      <element name="TMSSQLConnectionDef.LoadFunction.Result">
        <short>a function to call when loading MS-SQL support</short>
      </element>

      <element name="TMSSQLConnectionDef.TypeName">
        <short>Connection type name</short>
        <descr>
        <var>TypeName</var> returns the unique name of the MS-SQL connection.
        </descr>
        <seealso/>
      </element>
      <element name="TMSSQLConnectionDef.TypeName.Result">
        <short>MSSQL</short>
      </element>

      <element name="TMSSQLConnectionDef.UnLoadFunction">
        <short>Return Function to call when unloading MS-SQL support</short>
        <descr>
        <var>UnLoadFunction</var> is used by the connector logic to get the function to unload MS-SQL support.
        </descr>
      </element>
      <element name="TMSSQLConnectionDef.UnLoadFunction.Result">
        <short>a function to call when unloading MS-SQL support</short>
      </element>

      <element name="TSybaseConnection.Create">
        <short>Create a Sybase database connection</short>
        <descr>
        <var>Create</var> is the default constructor for the <var>TSybaseConnection</var> class. 
        It calls the inherited constructor and sets some defaults.
        </descr>
        <seealso/>
      </element>
      <element name="TSybaseConnection.Create.AOwner">
        <short>Owner of the connection instance</short>
      </element>

      <element name="TSybaseConnectionDef">
        <short>Connection definition for <var>TSQLConnector</var></short>
        <descr>Describes the MS SQL connection properties for <link id="TSQLConnector"/></descr>
        <seealso>
        <link id="TSybaseConnection"/>
        <link id="TSQLConnector"/>
        </seealso>
      </element>

      <element name="TSybaseConnectionDef.ConnectionClass">
        <short>Connection class to use.</short>
        <descr>
        <var>ConnectionClass</var> returns <link id="TSybaseConnection"/>
        </descr>
        <seealso>
        <link id="TSybaseConnection"/>
        </seealso>
      </element>
      <element name="TSybaseConnectionDef.ConnectionClass.Result">
        <short>TSybaseConnection</short>
      </element>

      <element name="TSybaseConnectionDef.DefaultLibraryName">
        <short>Default name of the Sybase client library</short>
        <descr>
        <var>DefaultLibraryName</var> returns the library name to use when loading the Sybase client library.
        </descr>
        <seealso/>
      </element>
      <element name="TSybaseConnectionDef.DefaultLibraryName.Result">
        <short>The library name</short>
      </element>

      <element name="TSybaseConnectionDef.Description">
        <short>Short description of connection</short>
        <descr>
        <var>Description</var> describes the Sybase connector type.
        </descr>
        <seealso/>
      </element>
      <element name="TSybaseConnectionDef.Description.Result">
        <short>A short description of the Sybase connector type</short>
      </element>

      <element name="TSybaseConnectionDef.LoadedLibraryName">
        <short>Actally loaded library name</short>
        <descr>
        <var>LoadedLibraryName</var> returns the actually loaded library name.
        </descr>
        <seealso>
        <link id="TSybaseConnectionDef.DefaultLibraryName">DefaultLibraryName</link>
        </seealso>
      </element>
      <element name="TSybaseConnectionDef.LoadedLibraryName.Result">
        <short>The actually loaded library</short>
      </element>

      <element name="TSybaseConnectionDef.LoadFunction">
        <short>Return Function to call when loading Sybase support</short>
        <descr>
        <var>LoadFunction</var> is used by the connector logic to get the function to dynamically load Sybase support.
        </descr>
        <seealso/>
      </element>
      <element name="TSybaseConnectionDef.LoadFunction.Result">
        <short>a function to call when loading Sybase support</short>
      </element>

      <element name="TSybaseConnectionDef.TypeName">
        <short>Connection type name</short>
        <descr>
        <var>TypeName</var> returns the unique name of the Sybase connection.
        </descr>
        <seealso/>
      </element>
      <element name="TSybaseConnectionDef.TypeName.Result">
        <short>Sybase</short>
      </element>

      <element name="TSybaseConnectionDef.UnLoadFunction">
        <short>Return Function to call when unloading Sybase support</short>
        <descr>
        <var>UnLoadFunction</var> is used by the connector logic to get the function to unload Sybase support.
        </descr>
      </element>
      <element name="TSybaseConnectionDef.UnLoadFunction.Result">
        <short>a function to call when unloading Sybase support</short>
      </element>

    </module>
    <!-- mssqlconn -->
  </package>
  <!-- fcl-db -->
</fpdoc-descriptions>
 